/*!
* cookie-parser
* MIT Licensed
*/

/**
* Module dependencies.
*/

var cookie = require('cookie');
var parse = require('./lib/parse');

/**
 * Parse Cookie header and populate `req.cookies`
 * with an object keyed by the cookie names.
 *
 * @param {String} [secret]
 * @param {Object} [options]
 * @return {Function}
 * @api public
 */

exports = module.exports = function cookieParser(secret, options){
  return function cookieParser(socket, next) {
    if (socket.request.cookie)
        return next();
    var cookies = socket.request.headers.cookie;

    socket.request.secret = secret;
    socket.request.cookies = Object.create(null);
    socket.request.signedCookies = Object.create(null);

    // no cookies
    if (!cookies) {
      return next();
    }

      socket.request.cookies = cookie.parse(cookies, options);

    // parse signed cookies
    if (secret) {
        socket.request.signedCookies = parse.signedCookies(socket.request.cookies, secret);
        socket.request.signedCookies = parse.JSONCookies(socket.request.signedCookies);
    }

    // parse JSON cookies
    socket.request.cookies = parse.JSONCookies(socket.request.cookies);
    next();
  };
};

/**
 * Export nothing.
 */